{
	"name": "df_updatedimension",
	"properties": {
		"folder": {
			"name": "Chapter-07"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_azure_sql_Sales",
						"type": "DatasetReference"
					},
					"name": "srcSales"
				},
				{
					"dataset": {
						"referenceName": "ds_azure_sql_Product",
						"type": "DatasetReference"
					},
					"name": "srcProduct"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_azure_sql_Product",
						"type": "DatasetReference"
					},
					"name": "destProduct"
				}
			],
			"transformations": [
				{
					"name": "SeparateProductWeight"
				},
				{
					"name": "RemoveDuplicate"
				},
				{
					"name": "ExistsProduct"
				}
			],
			"script": "source(output(\n\t\tRowId as integer,\n\t\tRetailer as string,\n\t\tSalesMonth as date,\n\t\tProduct as string,\n\t\tSalesValueUSD as decimal(19,2),\n\t\tUnitsSold as integer,\n\t\tRunSeqNo as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> srcSales\nsource(output(\n\t\tProduct as string,\n\t\tProductName as string,\n\t\tWeightInOunces as decimal(19,2),\n\t\tWeightInGrams as decimal(19,2)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> srcProduct\nsrcSales derive(ProductName = trim(left(Product,length(Product) - length(:WeightString))),\n\t\tWeightInOunces = toFloat(replace(:WeightString, :WeightUnit, '')) / iif(:WeightUnit=='g', 28.3495, 1.0),\n\t\tWeightInGrams = toFloat(replace(:WeightString, :WeightUnit, '')) / iif(:WeightUnit=='oz', 0.035274, 1.0),\n\t\tWeightString := right(Product,locate(' ', reverse(Product))-1),\n\t\tWeightUnit := iif(endsWith(Product, 'oz'), 'oz', 'g')) ~> SeparateProductWeight\nSeparateProductWeight aggregate(groupBy(Product),\n\tProductName = first(ProductName),\n\t\teach(match(startsWith(name,'Weight')), $$ = first($$))) ~> RemoveDuplicate\nRemoveDuplicate, srcProduct exists(RemoveDuplicate@Product == srcProduct@Product,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistsProduct\nExistsProduct sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tProduct as string,\n\t\tProductName as string,\n\t\tWeightInOunces as decimal(19,2),\n\t\tWeightInGrams as decimal(19,2)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> destProduct"
		}
	}
}